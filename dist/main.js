/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// @flow\n// @format\n//\n// The core functionality for l-systems is like this.\nfunction rewrite(state, rules) {\n  let result = \"\";\n  for (let i = 0; i < state.length; i++) {\n    const current = state[i];\n    const replacements = rules[current] || [];\n    if (replacements.length == 0) {\n      result += current;\n    } else if (replacements.length == 1) {\n      result += replacements[0];\n    } else {\n      throw new Error(\"Unsupported as of yet.\");\n    }\n  }\n  return result;\n}\n\nfunction move(x, y, heading, length) {\n  const dx = length * Math.cos(heading);\n  const dy = length * Math.sin(heading);\n  return [x + dx, y + dy];\n}\n\nclass MeasureContext {\n  /*::\n  min_x: number;\n  min_y: number;\n  max_x: number;\n  max_y: number;\n  */\n\n  constructor() {\n    this.min_x = 0;\n    this.max_x = 0;\n    this.min_y = 0;\n    this.max_y = 0;\n  }\n  beginPath() {}\n  stroke() {}\n  moveTo(x, y) {\n    if (this.min_x === undefined || x < this.min_x) {\n      this.min_x = x;\n    }\n    if (this.max_x === undefined || x > this.max_x) {\n      this.max_x = x;\n    }\n    if (this.min_y === undefined || y < this.min_y) {\n      this.min_y = y;\n    }\n    if (this.max_y === undefined || y > this.max_y) {\n      this.max_y = y;\n    }\n  }\n  lineTo(x, y) {\n    this.moveTo(x, y);\n  }\n}\n\nfunction render(state, context, config) {\n  let { x, y, heading, step_length, angle_delta } = config;\n  const state_stack = [];\n\n  context.beginPath();\n  context.moveTo(x, y);\n\n  for (let i = 0; i < state.length; i++) {\n    const current = state[i];\n    if (current == \"F\") {\n      // Move forward by straight_length\n      const [new_x, new_y] = move(x, y, heading, step_length);\n      context.lineTo(new_x, new_y);\n      x = new_x;\n      y = new_y;\n    } else if (current == \"f\") {\n      const [new_x, new_y] = move(x, y, heading, step_length);\n      context.moveTo(new_x, new_y);\n      x = new_x;\n      y = new_y;\n    } else if (current == \"+\") {\n      heading += angle_delta;\n    } else if (current == \"-\") {\n      heading -= angle_delta;\n    } else if (current == \"[\") {\n      state_stack.push([x, y, heading]);\n    } else if (current == \"]\") {\n      [x, y, heading] = state_stack.pop();\n      context.moveTo(x, y);\n    }\n  }\n\n  context.stroke();\n}\n\nfunction toRadians(degrees) {\n  return degrees * (Math.PI / 180.0);\n}\n\n// Definition here:\nconst initial = \"X\";\nconst angle = toRadians(22.5);\nconst rules = {\n  X: [\"F-[[X]+X]+F[+FX]-X\"],\n  F: [\"FF\"],\n};\n\n// HTML mechanics, WebGL bullshit.\nconst vsSource = `\nattribute vec4 aVertexPosition;\n\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\n\nvoid main() {\n  gl_Position = uProjectionMatrix * uModelViewMatrix * aVertexPosition;\n}\n`;\nconst fsSource = `\n  void main() {\n    gl_FragColor = vec4(1.0, 1.0, 1.0, 1.0);\n  }\n`;\n\nfunction initShaderProgram(gl, vsSource, fsSource) {\n  const vertexShader = loadShader(gl, gl.VERTEX_SHADER, vsSource);\n  const fragmentShader = loadShader(gl, gl.FRAGMENT_SHADER, fsSource);\n\n  const shaderProgram = gl.createProgram();\n  if (shaderProgram == null) {\n    throw new Error(\"Unable to create shader program\");\n  }\n  gl.attachShader(shaderProgram, vertexShader);\n  gl.attachShader(shaderProgram, fragmentShader);\n  gl.linkProgram(shaderProgram);\n\n  if (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS)) {\n    console.error(\n      \"Unable to initialize the shader program: \" +\n        (gl.getProgramInfoLog(shaderProgram) || \"\")\n    );\n    throw new Error(\"Failed to init shader program\");\n  }\n\n  return shaderProgram;\n}\n\nfunction loadShader(gl, type, source) {\n  const shader = gl.createShader(type);\n  gl.shaderSource(shader, source);\n  gl.compileShader(shader);\n  if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n    console.error(\n      \"An error occurred compiling the shaders: \" +\n        (gl.getShaderInfoLog(shader) || \"\")\n    );\n    gl.deleteShader(shader);\n    throw new Error(\"Failed to load shader\");\n  }\n\n  return shader;\n}\n\nfunction initBuffers(gl) {\n  const positionBuffer = gl.createBuffer();\n  gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\n\n  const positions = [1.0, 1.0, -1.0, 1.0, 1.0, -1.0, -1.0, -1.0];\n  gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(positions), gl.STATIC_DRAW);\n\n  return {\n    position: positionBuffer,\n  };\n}\n\nfunction setup(gl) {\n  gl.clearColor(0, 0, 0, 1);\n  gl.clearDepth(1.0);\n  gl.enable(gl.DEPTH_TEST);\n  gl.depthFunc(gl.LEQUAL);\n\n  const shaderProgram = initShaderProgram(gl, vsSource, fsSource);\n  const programInfo = {\n    program: shaderProgram,\n    attribLocations: {\n      vertexPosition: gl.getAttribLocation(shaderProgram, \"aVertexPosition\"),\n    },\n    uniformLocations: {\n      projectionMatrix: gl.getUniformLocation(\n        shaderProgram,\n        \"uProjectionMatrix\"\n      ),\n      modelViewMatrix: gl.getUniformLocation(shaderProgram, \"uModelViewMatrix\"),\n    },\n  };\n  return programInfo;\n}\n\nconst garden = document.getElementById(\"garden\");\nif (!(garden && garden instanceof HTMLCanvasElement)) {\n  throw Error(\"Cannot find garden.\");\n}\nconst gardenContext = garden.getContext(\"webgl\");\nif (gardenContext == null) {\n  throw Error(\"Cannot get GL context.\");\n}\nconst programInfo = setup(gardenContext);\nconst buffers = initBuffers(gardenContext);\n\nconst render_config = {\n  x: 0,\n  y: 0,\n  heading: Math.PI * 1.5,\n  step_length: 10,\n  step_factor: 1,\n  angle_delta: angle,\n};\n\nlet state = initial;\nfunction draw(gl) {\n  // Step 1: Measure the boundaries of the plant.\n  const measure_context = new MeasureContext();\n  render(state, measure_context, render_config);\n  const render_width = measure_context.max_x - measure_context.min_x;\n  const render_height = measure_context.max_y - measure_context.min_y;\n\n  // Step 2: Draw the plant.\n\n  gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n  // gardenContext.clearRect(0, 0, garden.width, garden.height);\n  // gardenContext.save();\n  // gardenContext.scale(\n  //   garden.width / render_width,\n  //   garden.height / render_height\n  // );\n  // gardenContext.translate(-measure_context.min_x, -measure_context.min_y);\n  // render(state, gardenContext, render_config);\n  // gardenContext.restore();\n}\n\nfunction step() {\n  state = rewrite(state, rules);\n  render_config.step_length /= render_config.step_factor;\n  draw(gardenContext);\n}\n\nconst stepButton = document.getElementById(\"step\");\nif (!stepButton) {\n  throw Error(\"Cannot find step button.\");\n}\nstepButton.addEventListener(\"click\", step);\ndraw(gardenContext);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ })

/******/ });